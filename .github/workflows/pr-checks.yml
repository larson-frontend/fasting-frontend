name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick validation
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate package.json
      run: npm run validate || echo "No validate script found"
    
    - name: Check TypeScript compilation
      run: npx vue-tsc --noEmit
    
    - name: Run fast tests
      run: npm run test:run -- --reporter=verbose

  # Test different scenarios
  test-matrix:
    name: Test Matrix
    runs-on: ubuntu-latest
    needs: validate
    
    strategy:
      matrix:
        test-group: ['unit', 'integration', 'e2e']
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ${{ matrix.test-group }} tests
      run: |
        case "${{ matrix.test-group }}" in
          "unit")
            npm run test:run -- --reporter=verbose tests/basic.test.ts
            ;;
          "integration")
            npm run test:run -- --reporter=verbose tests/goal-system*.test.ts
            ;;
          "e2e")
            npm run test:run -- --reporter=verbose tests/error-scenarios.test.ts
            ;;
        esac

  # Check for breaking changes
  breaking-changes:
    name: Breaking Changes Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for API changes
      run: |
        echo "Checking for potential breaking changes..."
        git diff origin/main...HEAD --name-only | grep -E '\.(vue|ts|js)$' | while read file; do
          echo "Checking $file for breaking changes..."
          if git diff origin/main...HEAD "$file" | grep -E '^-.*export|^-.*interface|^-.*type' >/dev/null; then
            echo "⚠️  Potential breaking change detected in $file"
          fi
        done || echo "No breaking changes detected"
    
    - name: Build comparison
      run: |
        echo "Building current branch..."
        npm run build
        mv dist dist-current
        
        echo "Building main branch..."
        git checkout origin/main
        npm ci
        npm run build
        mv dist dist-main
        
        echo "Comparing build outputs..."
        diff -r dist-main dist-current || echo "Build outputs differ - this is normal for feature branches"

  # Performance check
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for performance analysis
      run: npm run build
    
    - name: Bundle size analysis
      run: |
        echo "## Bundle Size Analysis 📦" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|" >> $GITHUB_STEP_SUMMARY
        find dist -name "*.js" -o -name "*.css" | while read file; do
          size=$(du -h "$file" | cut -f1)
          echo "| ${file#dist/} | $size |" >> $GITHUB_STEP_SUMMARY
        done
    
    - name: Test performance
      run: |
        echo "Running performance tests..."
        npm run test:run -- --reporter=verbose --timeout=30000

  # PR Summary
  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [validate, test-matrix, breaking-changes, performance]
    if: always()
    
    steps:
    - name: Generate PR Summary
      run: |
        echo "## Pull Request Check Results 🔍" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Validation | ${{ needs.validate.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Test Matrix | ${{ needs.test-matrix.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Breaking Changes | ${{ needs.breaking-changes.result == 'success' && '✅ No Issues' || '⚠️ Check Required' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance | ${{ needs.performance.result == 'success' && '✅ Good' || '⚠️ Check Required' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ All checks passed - Ready for review" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 Review test coverage and performance metrics" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 Ensure documentation is updated if needed" >> $GITHUB_STEP_SUMMARY
